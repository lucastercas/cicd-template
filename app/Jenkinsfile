pipeline {
    agent {
        docker {
            image 'maven:3-alpine' 
            args '-v /root/.m2:/root/.m2' 
        }
    }
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Build') { 
            steps {
                sh 'mvn -B -DskipTests clean package' 
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Sonarqube') {
            steps {
                sh 'mvn sonar:sonar -Dsonar.projectKey=org.springframework:gs-spring-boot-docker -Dsonar.host.url=http://sonarqube -Dsonar.login=9427f57aaca2d21937228b06cc86f9eae30c19a8'
            }
        }
        stage('Docker Login') {
            steps {
                sh 'echo docker login'
            }
        }
        stage('Push Image') {
            steps {
                sh 'echo pushing image'
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: "target/*.jar", fingerprint: true
        }
    }
}